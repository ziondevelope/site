                                  }}>
                                    <SelectValue placeholder="Selecione o tipo de imóvel" />
                                  </SelectTrigger>
                                  <SelectContent>
                                    <SelectItem value="apartment">Apartamento</SelectItem>
                                    <SelectItem value="house">Casa</SelectItem>
                                    <SelectItem value="commercial">Comercial</SelectItem>
                                  </SelectContent>
                                </Select>
                                <div className="flex ml-2">
                                  <Button 
                                    size="icon" 
                                    variant="ghost" 
                                    className="h-6 w-6" 
                                    onClick={handleSaveEdit}
                                    disabled={updateLeadFieldMutation.isPending}
                                  >
                                    <Check className="h-4 w-4" />
                                  </Button>
                                  <Button 
                                    size="icon" 
                                    variant="ghost" 
                                    className="h-6 w-6" 
                                    onClick={handleCancelEdit}
                                  >
                                    <X className="h-4 w-4" />
                                  </Button>
                                </div>
                              </div>
                            ) : (
                              <div className="flex items-center">
                                <p className="text-sm text-left" style={{ fontSize: "12px", color: "#878484" }}>
                                  {(lead as any).propertyType === 'apartment' ? 'Apartamento' : 
                                  (lead as any).propertyType === 'house' ? 'Casa' : 
                                  (lead as any).propertyType === 'commercial' ? 'Comercial' : 
                                  'Não informado'}
                                </p>
                                <button 
                                  className="ml-2 invisible group-hover:visible"
                                  onClick={() => handleStartEditing(lead.id, 'propertyType', (lead as any).propertyType)}
                                >
                                  <Pencil className="h-3 w-3 text-gray-500 hover:text-gray-700" />
                                </button>
                              </div>
                            )}
                          </div>
                        </div>
                        
                        <div>
                          <h4 className="text-xs font-semibold mb-1 flex items-center" style={{ fontSize: '14px' }}><MapPin className="h-4 w-4 mr-1 text-gray-500" /> Região:</h4>
                          <div className="group relative">
                            {editingField && editingField.leadId === lead.id && editingField.field === 'region' ? (
                              <div className="flex items-center">
                                <Input 
                                  value={editingValue}
                                  onChange={(e) => setEditingValue(e.target.value)}
                                  className="h-8 text-sm focus-visible:ring-0 focus-visible:ring-offset-0 focus:outline-none"
                                  style={{ 
                                    fontSize: '12px',
                                    border: '1px solid #d0d0d0',
                                    boxShadow: "none",
                                    outline: "none"
                                  }}
                                  autoFocus
                                />
                                <div className="flex ml-2">
                                  <Button 
                                    size="icon" 
                                    variant="ghost" 
                                    className="h-6 w-6" 
                                    onClick={handleSaveEdit}
                                    disabled={updateLeadFieldMutation.isPending}
                                  >
                                    <Check className="h-4 w-4" />
                                  </Button>
                                  <Button 
                                    size="icon" 
                                    variant="ghost" 
                                    className="h-6 w-6" 
                                    onClick={handleCancelEdit}
                                  >
                                    <X className="h-4 w-4" />
                                  </Button>
                                </div>
                              </div>
                            ) : (
                              <div className="flex items-center">
                                <p className="text-sm text-left" style={{ fontSize: "12px", color: "#878484" }}>{(lead as any).region || "Não informado"}</p>
                                <button 
                                  className="ml-2 invisible group-hover:visible"
                                  onClick={() => handleStartEditing(lead.id, 'region', (lead as any).region)}
                                >
                                  <Pencil className="h-3 w-3 text-gray-500 hover:text-gray-700" />
                                </button>
                              </div>
                            )}
                          </div>
                        </div>
                        
                        <div>
                          <h4 className="text-xs font-semibold mb-1 flex items-center" style={{ fontSize: '14px' }}><DollarSign className="h-4 w-4 mr-1 text-gray-500" /> Faixa de Preço:</h4>
                          <div className="group relative">
                            {editingField && editingField.leadId === lead.id && editingField.field === 'budget' ? (
                              <div className="flex items-center">
                                <Input 
                                  type="number"
                                  value={editingValue}
                                  onChange={(e) => setEditingValue(e.target.value)}
                                  className="h-8 text-sm focus-visible:ring-0 focus-visible:ring-offset-0 focus:outline-none"
                                  style={{ 
                                    fontSize: '12px',
                                    border: '1px solid #d0d0d0',
                                    boxShadow: "none",
                                    outline: "none"
                                  }}
                                  autoFocus
                                  placeholder="Valor do orçamento"
                                />
                                <div className="flex ml-2">
                                  <Button 
                                    size="icon" 
                                    variant="ghost" 
                                    className="h-6 w-6" 
                                    onClick={handleSaveEdit}
                                    disabled={updateLeadFieldMutation.isPending}
                                  >
                                    <Check className="h-4 w-4" />
                                  </Button>
                                  <Button 
                                    size="icon" 
                                    variant="ghost" 
                                    className="h-6 w-6" 
                                    onClick={handleCancelEdit}
                                  >
                                    <X className="h-4 w-4" />
                                  </Button>
                                </div>
                              </div>
                            ) : (
                              <div className="flex items-center">
                                <p className="text-sm text-left" style={{ fontSize: "12px", color: "#878484" }}>
                                  {(lead as any).priceRangeMin && (lead as any).priceRangeMax ? 
                                    `R$ ${(lead as any).priceRangeMin.toLocaleString('pt-BR')} - R$ ${(lead as any).priceRangeMax.toLocaleString('pt-BR')}` : 
                                    lead.budget ? 'R$ ' + lead.budget.toLocaleString('pt-BR') : 'Não informado'}
                                </p>
                                <button 
                                  className="ml-2 invisible group-hover:visible"
                                  onClick={() => handleStartEditing(lead.id, 'budget', lead.budget)}
                                >
                                  <Pencil className="h-3 w-3 text-gray-500 hover:text-gray-700" />
                                </button>
                              </div>
                            )}
                          </div>
                        </div>
                        
                        <div>
                          <h4 className="text-xs font-semibold mb-1 flex items-center" style={{ fontSize: '14px' }}><Tag className="h-4 w-4 mr-1 text-gray-500" /> Origem:</h4>
                          <div className="group relative">
                            {editingField && editingField.leadId === lead.id && editingField.field === 'source' ? (
                              <div className="flex items-center">
                                <Select
                                  value={editingValue}
                                  onValueChange={(value) => setEditingValue(value)}
                                >
                                  <SelectTrigger className="h-8 text-sm focus-visible:ring-0 focus-visible:ring-offset-0 focus:outline-none" 
                                  style={{ 
                                    fontSize: '12px',
                                    border: '1px solid #d0d0d0',
                                    boxShadow: "none",
                                    outline: "none"
                                  }}>
                                    <SelectValue placeholder="Selecione a origem" />
                                  </SelectTrigger>
                                  <SelectContent>
                                    <SelectItem value="manual">Manual</SelectItem>
                                    <SelectItem value="website">Website</SelectItem>
                                    <SelectItem value="whatsapp">WhatsApp</SelectItem>
                                    <SelectItem value="instagram">Instagram</SelectItem>
                                    <SelectItem value="facebook">Facebook</SelectItem>
                                    <SelectItem value="indicacao">Indicação</SelectItem>
                                  </SelectContent>
                                </Select>
                                <div className="flex ml-2">
                                  <Button 
                                    size="icon" 
                                    variant="ghost" 
                                    className="h-6 w-6" 
                                    onClick={handleSaveEdit}
                                    disabled={updateLeadFieldMutation.isPending}
                                  >
                                    <Check className="h-4 w-4" />
                                  </Button>
                                  <Button 
                                    size="icon" 
                                    variant="ghost" 
                                    className="h-6 w-6" 
                                    onClick={handleCancelEdit}
                                  >
                                    <X className="h-4 w-4" />
                                  </Button>
                                </div>
                              </div>
                            ) : (
                              <div className="flex items-center">
                                <p className="text-sm text-left" style={{ fontSize: "12px", color: "#878484" }}>
                                  {lead.source === 'manual' ? 'Manual' :
                                  lead.source === 'website' ? 'Website' :
                                  lead.source === 'whatsapp' ? 'WhatsApp' :
                                  lead.source === 'instagram' ? 'Instagram' :
                                  lead.source === 'facebook' ? 'Facebook' :
                                  lead.source === 'indicacao' ? 'Indicação' :
                                  lead.source || 'Não informado'}
                                </p>
                                <button 
                                  className="ml-2 invisible group-hover:visible"
                                  onClick={() => handleStartEditing(lead.id, 'source', lead.source)}
                                >
                                  <Pencil className="h-3 w-3 text-gray-500 hover:text-gray-700" />
                                </button>
                              </div>
                            )}
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                
                {/* Coluna de Notas */}
                <div className="md:col-span-9 px-8">                  
                  <div>
                    <div className="p-5 border border-[#f5f5f5] rounded-[5px]" style={{ background: '#F9FAFB' }}>
                      <h3 className="text-base font-bold mb-4 flex items-center">
                        <FileText className="h-4 w-4 mr-2 text-gray-500" />
                        Nota Rápida
                      </h3>
                      <div className="w-full h-px mb-4 -mx-5" style={{ marginLeft: '-20px', marginRight: '-20px', width: 'calc(100% + 40px)', backgroundColor: 'rgb(245, 245, 245)' }}></div>
                      <div className="bg-white" style={{ minHeight: '200px' }}>
                        <ReactQuill
                          id={`note-textarea-${lead.id}`}
                          theme="snow"
                          placeholder="Digite uma anotação rápida sobre este lead..."
                          value={leadNotes[lead.id] || lead.notes || ""}
                          onChange={(content) => setLeadNotes(prev => ({
                            ...prev,
                            [lead.id]: content
                          }))}
                          modules={quillModules}
                          className="h-32 focus:outline-none quill-no-border"
                        />
                      </div>
                      <div className="flex justify-end mt-4 pr-5 pb-2">
                        <Button 
                          className="bg-[#3565E7] hover:bg-[#2955CC] text-sm"
                          onClick={() => handleSaveNote(lead.id)}
                        >
                          Salvar Nota
                        </Button>
                      </div>
                    </div>
                    
                    {/* Histórico de atividades/notas */}
                    <div className="mt-8">
                      <div className="p-5 border border-[#f5f5f5] rounded-[5px]" style={{ background: '#F9FAFB' }}>
                        <h3 className="text-base font-bold mb-4 flex items-center">
                          <MessageSquare className="h-4 w-4 mr-2 text-gray-500" />
                          Histórico de Atividades
                        </h3>
                        <div className="w-full h-px mb-4 -mx-5" style={{ marginLeft: '-20px', marginRight: '-20px', width: 'calc(100% + 40px)', backgroundColor: 'rgb(245, 245, 245)' }}></div>
                        
                        {savedNotes[lead.id] && savedNotes[lead.id].length > 0 ? (
                          <div className="space-y-4">
                            {savedNotes[lead.id].map((note, index) => (
                              <div key={index} className="p-4 border border-[#f5f5f5] rounded-[5px] bg-white">
                                <div className="flex justify-between items-start mb-2">
                                  <span className="text-sm font-semibold">{formatDate(note.date)}</span>
                                  <span className="text-xs text-gray-500">{formatTime(note.date)}</span>
                                </div>
                                <div className="text-sm text-left" dangerouslySetInnerHTML={{ __html: note.text }}></div>
                              </div>
                            ))}
                          </div>
                        ) : (
                          <div className="text-center py-6 text-gray-500 text-sm">
                            Nenhuma nota foi adicionada ainda.
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </DialogContent>
        </Dialog>
      ))}
    </div>
  );
}